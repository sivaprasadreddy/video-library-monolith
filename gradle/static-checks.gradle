apply plugin: 'jacoco'
apply plugin: "org.sonarqube"

def jacocoMinCoverageRequired = 0.80

jacoco {
    toolVersion = "${jacoco_plugin_version}"
}

def jacocoExcludes = [
    'com/sivalabs/todolist/*Application.*',
]

jacocoTestReport {
    executionData tasks.withType(Test)
    classDirectories.from = files(sourceSets.main.output.classesDirs)
    sourceDirectories.from = files(sourceSets.main.java.srcDirs)

    afterEvaluate {
        getClassDirectories().setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: jacocoExcludes)
        }))
    }

    reports {
        xml.required = true
        html.required = true
    }
}

jacocoTestCoverageVerification {
    dependsOn ":integrationTest"
    executionData fileTree(project.buildDir.absolutePath).include("jacoco/*.exec")

    violationRules {
        rule {
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = jacocoMinCoverageRequired
            }
            excludes = jacocoExcludes
        }
    }
}

check.dependsOn jacocoTestReport, jacocoTestCoverageVerification

file("sonar-project.properties").withReader {
    Properties sonarProperties = new Properties()
    sonarProperties.load(it)

    sonarProperties.each { key, value ->
        sonarqube {
            properties {
                property key, value
            }
        }
    }
}
